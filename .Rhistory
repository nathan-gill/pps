setwd("C:/Users/npg0160/Box Sync/Metab Networks/simulation-model/Gill_Statistic_Explorations/PPS_package/pps/R")
source("app.R")
source("app.R")
ui
runApp <- function() {
source("app.R")
shinyApp(ui, server)
}
runApp()
runApp()
setwd("C:/Users/npg0160/Box Sync/Metab Networks/simulation-model/Gill_Statistic_Explorations/PPS_package")
install("pps")
devtools::install("pps")
install.packages("Rtools")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
setwd("C:/Users/npg0160/Desktop/Mesulam/BrainAge")
#Standard mixed model library in R
library(lme4)
#Read in data
brain.age.data <- read.csv("BrainAge_data_retrained.csv")
#Change reference to healthy controls
data$Diagnosis <- relevel(as.factor(data$Diagnosis), "HC")
#Fit mixed model, with mean-centered age
mod <- lmer(All ~ I(Age-mean(Age))*Diagnosis + (1 + I(Age-mean(Age))| subj_ID), data = brain.age.data)
#Print output.
#There's lots of info online about reading summaries of
#models created using lme4::lmer if anything in the ouput
#is confusing.
summary(mod)
#Diagnostics
#Residuals vs fitted values. Should
#look like a random cloud of points.
plot(x = fitted(mod), y = resid(mod))
#qqplot (run both commands). Probably less important than residuals vs
#fitted values, but good to check. If the residuals are normally distributed,
#they'll fall on the line. The farther out before deviations start to occurr, the better.
qqnorm(resid(mod))
qqline(resid(mod))
#Standard mixed model library in R
library(lme4)
#Read in data
brain.age.data <- read.csv("BrainAge_data_retrained.csv")
#Change reference to healthy controls
brain.age.data$Diagnosis <- relevel(as.factor(brain.age.data$Diagnosis), "HC")
#Fit mixed model, with mean-centered age
mod <- lmer(All ~ I(Age-mean(Age))*Diagnosis + (1 + I(Age-mean(Age))| subj_ID), data = brain.age.data)
#Print output.
#There's lots of info online about reading summaries of
#models created using lme4::lmer if anything in the ouput
#is confusing.
summary(mod)
#Diagnostics
#Residuals vs fitted values. Should
#look like a random cloud of points.
plot(x = fitted(mod), y = resid(mod))
#qqplot (run both commands). Probably less important than residuals vs
#fitted values, but good to check. If the residuals are normally distributed,
#they'll fall on the line. The farther out before deviations start to occurr, the better.
qqnorm(resid(mod))
qqline(resid(mod))
#Standard mixed model library in R
library(lme4)
#Read in data
brain.age.data <- read.csv("BrainAge_data_retrained.csv")
#Change reference to healthy controls
brain.age.data$Diagnosis <- relevel(as.factor(brain.age.data$Diagnosis), "HC")
#Fit mixed model, with mean-centered age
mod <- lmer(All ~ I(Age-mean(Age))*Diagnosis + (1| subj_ID), data = brain.age.data)
#Print output.
#There's lots of info online about reading summaries of
#models created using lme4::lmer if anything in the ouput
#is confusing.
summary(mod)
#Diagnostics
#Residuals vs fitted values. Should
#look like a random cloud of points.
plot(x = fitted(mod), y = resid(mod))
#qqplot (run both commands). Probably less important than residuals vs
#fitted values, but good to check. If the residuals are normally distributed,
#they'll fall on the line. The farther out before deviations start to occurr, the better.
qqnorm(resid(mod))
qqline(resid(mod))
